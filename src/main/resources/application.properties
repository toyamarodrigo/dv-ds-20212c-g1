server.port = 8090
spring.aop.proxy-target-class=true

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "recursos_humanos" as database name and 
# "root" as username and password.
spring.datasource.url=jdbc:mysql://localhost:3306/dv-ds-20212c-g1
spring.datasource.username=root
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.datasource.schema=classpath:/data/h2db/schema.sql
spring.datasource.data=classpath:/data/h2db/data.sql

# Show or not log for each sql query
spring.jpa.show-sql = true


#to show sql
spring.jpa.properties.hibernate.show_sql=true
#formatting
spring.jpa.properties.hibernate.format_sql=true
#printing parameter values in order
logging.level.org.hibernate.type.descriptor.sql=trace


# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Enable all endpoints
management.endpoints.web.exposure.include=*

#Spring serializer
spring.jackson.serialization.fail-on-empty-beans=false
